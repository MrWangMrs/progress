```js
<!DOCTYPE html>
<html>
<head>
    <title></title>
    <style>canvas { width: 100%; height: 100% }</style>
    <script src="js/three.js"></script>
</head>
<body>
    <script>
       var scene = new THREE.Scene();  // 场景
       var camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);// 透视相机
       var renderer = new THREE.WebGLRenderer();   // 渲染器
       renderer.setSize(window.innerWidth, window.innerHeight);    // 设置渲染器的大小为窗口的内宽度，也就是内容区的宽度
       document.body.appendChild(renderer.domElement);//把渲染器放到页面中
        var geometry = new THREE.CubeGeometry(1,1,1);//创建几何体
        var material = new THREE.MeshBasicMaterial({color: 0x00ff00});//几何体的线条
        var cube = new THREE.Mesh(geometry, material); scene.add(cube);//创建线对象
        camera.position.z = 5;
        function render() {
        //这个是循环渲染
            requestAnimationFrame(render);
            cube.rotation.x += 0.1;
            cube.rotation.y += 0.1;
            renderer.render(scene, camera);
        }
        render();
    </script>
</body>
</html>
```
 ## three主要分为几个大的模块
  -场景
  -相机
  -渲染
  -几何体  
 ### 场景
  在Threejs中场景就只有一种，用THREE.Scene来表示，要构件一个场景也很简单，只要new一个对象就可以了，代码如下：  
  ```js
  var scene = new THREE.Scene();
  ```
  ### 相机
  ```js
  这种是 透视相机
  var camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
参数分别为：角度、宽高比、最近距离、最远距离
  ```
  
 ### 渲染器
   渲染器决定了渲染的结果应该画在页面的什么元素上面，并且以怎样的方式来绘制。  
   ```js
    var renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(renderer.domElement);

   ```
   注意，渲染器renderer的domElement元素，表示渲染器中的画布，所有的渲染都是画在domElement上的，所以这里的appendChild表示将这个domElement挂接在body下面，这样渲染的结果就能够在页面中显示了。  
   ### 几何体
   ```js
     var geometry = new THREE.CubeGeometry(1,1,1); //参数分别是宽高深
     
    var material = new THREE.MeshBasicMaterial({color: 0x00ff00});
    var cube = new THREE.Mesh(geometry, material); 
    scene.add(cube);
   ```
