## 带着问题去看源码

1. global event bus 有何缺陷
2. $store 如何注入到所有子组件
3. mapState 实现
4. mapGetter 如何映射
5. Mutation 同步 && Action 异步
6. dispatch 方法实现
7. module 分割实现 && 局部状态 namespaced
8. 如何调用 vue-devtools
9. 内置 logger 插件实现
10. hotUpdate
11. 时间穿梭功能实现

index.js 引入了 Store 、install 和一些辅助工具函数，并将引入的变量组装成一个对象向外暴露。

当我们在项目中引入 import Vuex from 'vuex' 的之后， Vuex 就是这个组装后默认导出的对象了。

install 方法首先判断变量 Vue (store.js 顶部申明的变量) 是否与传入 _Vue 全等，如果全等并且在非生产环境，抛出异常。

随后将传入的 _Vue 赋值给 Vue，这里主要是为了避免重复安装。

然后调用引入的 applyMixin 方法，并将 Vue 作为参数传入。

在 vuexInit 方法中，首先判断 options.store，如果为真说明是 root 节点，并且一个三元表达式赋值给 this.$store，如果 store 是 function 就执行将函数返回值赋值给 this.$store ，否则将 options.store 直接赋值。

接着进入 else if，判断如果有父节点，并且父节点有 $store, 就将父节点的 $store 赋值给 this.$store ，所有的 this.$store 指向了同一个对象，这样就保证只有一个全局的 $store 变量。
