# HTTP协议

## HTTP协议的主要特点

1. 简单快速
每个资源（比如图片、页面）都通过 url 来定位。这都是固定的，在http协议中，处理起来也比较简单，想访问什么资源，直接输入url即可。
2. 灵活
http协议的头部有一个数据类型，通过http协议，就可以完成不同数据类型的传输。
3. 无连接
连接一次，就会断开，不会继续保持连接
4. 无状态
客户端和服务器端是两种身份。第一次请求结束后，就断开了，第二次请求时，服务器端并没有记住之前的状态，也就是说，服务器端无法区分客户端是否为同一个人、同一个身份。
有的时候，我们访问网站时，网站能记住我们的账号，这个是通过其他的手段（比如 session）做到的，并不是http协议能做到的。


## 报文的组成

HTTP报文是简单的格式化数据块，每条报文都包含一条来自客户端的请求，或者一条来自服务器的响应。它们由三个部分组成：对报文进行描述的其实行、包含属性的首部块、以及可选的、包含数据的主题部分。
起始行和首部就是由行分隔的 ASCII文本。每行都以一个由2个字符组成的行终止序列作为结束，包括一个回车符（ASCII码13）和一个换行符（ASCII码10），这个行终止序列可以写为CRLF。（稳健的应用程序也应该接受单个换行符作为行的终止）
实体的主体和报文的主体是一个可选的数据块。与起始行和首部不同的是，主体中可包含文本或二进制数据，也可以为空如上图，Content-type行说明了主体是一个纯文本文档，Content-length说明了主体有19字节。

+ 先回答的是，http报文包括：请求报文和响应报文。
+ 再回答的是，每个报文包含什么部分。
+ 最后回答，每个部分的内容是什么

### 请求报文包括：

  请求行：包括请求方法、请求的url、http协议及版本。
  请求头：一大堆的键值对。
  空行指的是：当服务器在解析请求头的时候，如果遇到了空行，则表明，后面的内容是请求体。
  请求体：数据部分。

### 响应报文包括：
  状态行：http协议及版本、状态码及状态描述。
  响应头
  空行
  响应体

## HTTP方法 
+ GET：获取资源
+ POST：传输资源
+ put：更新资源
+ DELETE：删除资源
+ HEAD：获得报文首部

## get 和 post的区别

1、浏览器在回退时，get**不会重新请求**，但是post会重新请求。【重要】
2、get请求会被浏览器**主动缓存**，而post不会。【重要】
3、get请求的参数，会报**保留**在浏览器的**历史记录**里，而post不会。做业务时要注意。为了防止CSRF攻击，很多公司把get统一改成了post。
4、get请求在url中传递的参数有大小限制，基本是2kb，不同的浏览器略有不同。而post没有注意。
5、get的参数是直接暴露在url上的，相对不安全。而post是放在请求体中的。


## 持久链接/http长连接

- **轮询**：http1.0中，客户端每隔很短的时间，都会对服务器发出请求，查看是否有新的消息，只要轮询速度足够快，例如1秒，就能给人造成交互是实时进行的印象。这种做法是无奈之举，实际上对服务器、客户端双方都造成了大量的性能浪费。

- **长连接**：HTTP1.1中，通过使用Connection:keep-alive进行长连接，。客户端只请求一次，但是服务器会将继续保持连接，当再次请求时，避免了重新建立连接。

注意，HTTP 1.1默认进行持久连接。在一次 TCP 连接中可以完成多个 HTTP 请求，但是对**每个请求仍然要单独发 header**，Keep-Alive不会永久保持连接，它有一个保持时间，可以在不同的服务器软件（如Apache）中设定这个时间。

## http状态码
1XX系列：指定客户端应相应的某些动作，代表请求已被接受，需要继续处理。由于 HTTP/1.0 协议中没有定义任何 1xx 状态码，所以除非在某些试验条件下，服务器禁止向此类客户端发送 1xx 响应
2XX系列：代表请求已成功被服务器接收、理解、并接受。这系列中最常见的有200、201状态码。
3XX系列：代表需要客户端采取进一步的操作才能完成请求，这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的 Location 域中指明。这系列中最常见的有301、302状态码
4XX系列：表示请求错误。代表了客户端看起来可能发生了错误，妨碍了服务器的处理。常见有：401、404状态码。
5xx系列：代表了服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。常见有500、503状态码。
